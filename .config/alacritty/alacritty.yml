env:
  TERM: xterm-256color
import:
  - ~/.alacritty-colorscheme/themes/{scheme_name}.yaml
window:
  padding:
    x: 5
    y: 4

# Font configuration
font:
  size: 12.0

  normal:
    family: JetbrainsMono Nerd Font
    style: mediuM

  italic:
    family: SF Mono
    style: italic

  bold:
    family: SF Mono
    style: bold

draw_bold_text_with_bright_colors: true
# Colors (Konsole's Dark Pastels)
Colors:
  # Default colors
  primary:
    background: '0x2D2A2E'
    foreground: '0xfff1f3'

  # Normal colors
  normal:
    black: '0x2c2525'
    red: '0xfd6883'
    green: '0xadda78'
    yellow: '0xf9cc6c'
    blue: '0xf38d70'
    magenta: '0xa8a9eb'
    cyan: '0x85dacc'
    white: '0xfff1f3'

  # Bright colors
  bright:
    black: '0x72696a'
    red: '0xfd6883'
    green: '0xadda78'
    yellow: '0xf9cc6c'
    blue: '0xf38d70'
    magenta: '0xa8a9eb'
    cyan: '0x85dacc'
    white: '0xfff1f3'
# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
visual_bell:
  animation: EaseOutExpo
  duration: 0
  color: '0xffffff'

# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.
# background_opacity: 1.0

#selection:
#semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

# When set to `true`, selected text will be copied to the primary clipboard.
save_to_clipboard: true

# Allow terminal applications to change Alacritty's window title.
#dynamic_title: true

cursor:
  style: Block

  unfocused_hollow: true
shell:
  program: /usr/bin/fish
  args:
    - -l
    - -c
    - ' tmux'

working_directory: /home/nathan

hints:
  enabled:
    - regex: "(mailto:|gemini:|gopher:|https:|http:|news:|file:|git:|ssh:|ftp:)[^\0\
        -\x1F\x7F-\x9F<>\"\\s{-}\\^⟨⟩`]+"
      command: xdg-open
      post_processing: true
      mouse:
        enabled: true
        mods: None
      binding:
        key: U
        mods: Control|Shift
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings)
#
# And optionally:
#
# - `mods` (see key bindings)
#mouse_bindings:
#  - { mouse: Middle, action: PasteSelection }

# Key bindings
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
# Then exactly one of:
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `action`: Execute a predefined action
#
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Minimize
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - ReceiveChar
#   - None
#
#   (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
key_bindings:
  # (Windows, Linux, and BSD only)
  #- { key: V,        mods: Control|Shift, action: Paste            }
  #- { key: C,        mods: Control|Shift, action: Copy             }
  #- { key: Insert,   mods: Shift,         action: PasteSelection   }
  #- { key: Key0,     mods: Control,       action: ResetFontSize    }
  #- { key: Equals,   mods: Control,       action: IncreaseFontSize }
  #- { key: Add,      mods: Control,       action: IncreaseFontSize }
  #- { key: Subtract, mods: Control,       action: DecreaseFontSize }
  #- { key: Minus,    mods: Control,       action: DecreaseFontSize }

  # (Windows only)
  #- { key: Return,   mods: Alt,           action: ToggleFullscreen }

  # (macOS only)
  #- { key: Key0,   mods: Command,         action: ResetFontSize    }
  #- { key: Equals, mods: Command,         action: IncreaseFontSize }
  #- { key: Add,    mods: Command,         action: IncreaseFontSize }
  #- { key: Minus,  mods: Command,         action: DecreaseFontSize }
  #- { key: K,      mods: Command,         action: ClearHistory     }
  #- { key: K,      mods: Command,         chars: "\x0c"            }
  #- { key: V,      mods: Command,         action: Paste            }
  #- { key: C,      mods: Command,         action: Copy             }
  #- { key: H,      mods: Command,         action: Hide             }
  #- { key: M,      mods: Command,         action: Minimize         }
  #- { key: Q,      mods: Command,         action: Quit             }
  #- { key: W,      mods: Command,         action: Quit             }
  #- { key: F,      mods: Command|Control, action: ToggleFullscreen }

  #- { key: Paste,                    action: Paste                            }
  #- { key: Copy,                     action: Copy                             }
  #- { key: L,         mods: Control, action: ClearLogNotice                   }
  #- { key: L,         mods: Control, chars: "\x0c"                            }
  - {key: PageUp, mods: Shift, action: ScrollPageUp, mode: ~Alt}
  - {key: PageDown, mods: Shift, action: ScrollPageDown, mode: ~Alt}
  - {key: Home, mods: Shift, action: ScrollToTop, mode: ~Alt}
  - {key: End, mods: Shift, action: ScrollToBottom, mode: ~Alt}
colors:
  # COLORSCHEME: gruvbox_material.yml
  primary:
    background: '0x282828'
    foreground: '0xdfbf8e'

  cursor:
    text: '0xFF261E'
    cursor: '0xFF261E'

  # Normal colors
  normal:
    # Bright colors
    black: '0x665c54'
    red: '0xea6962'
    green: '0xa9b665'
    yellow: '0xe78a4e'
    blue: '0x7daea3'
    magenta: '0xd3869b'
    cyan: '0x89b482'
    white: '0xdfbf8e'

  bright:
    black: '0x928374'
    red: '0xea6962'
    green: '0xa9b665'
    yellow: '0xe3a84e'
    blue: '0x7daea3'
    magenta: '0xd3869b'
    cyan: '0x89b482'
    white: '0xdfbf8e'
  indexed_colors: []
  dim:
    black: '0x000000'
    red: '0xa90000'
    green: '0x049f2b'
    yellow: '0xa3b106'
    blue: '0x530aba'
    magenta: '0xbb006b'
    cyan: '0x433364'
    white: '0x5f5f5f'
  selection:
    text: '#ffe9d7'
    background: '#265b75'

  # Normal colors
